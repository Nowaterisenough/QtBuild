name: Build_Qt6.9.1_x86_64-linux-gnu_gcc15.1_static

on: workflow_dispatch
#on: [push, pull_request]

env:
  QT_VERSION: 6.9.1
  QT_VERSION2: 6.9
  FILE_NAME: static-Release_gcc15_64
  GCC_VERSION: 15.1.0

jobs:
  ubuntu_gcc15_static_release:
    runs-on: ubuntu-24.04

    steps:
    # 检出本仓库
    - name: Checkout repository
      uses: actions/checkout@v4

    # 安装python
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        architecture: 'x64'

    # 更新系统并安装依赖
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build curl unzip p7zip-full
        sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev libxkbcommon-dev
        sudo apt-get install -y libxcb1-dev libxcb-util-dev libxcb-image0-dev
        sudo apt-get install -y libxcb-keysyms1-dev libxcb-render-util0-dev
        sudo apt-get install -y libxcb-xinerama0-dev libfontconfig1-dev
        sudo apt-get install -y libfreetype6-dev libx11-dev libx11-xcb-dev
        sudo apt-get install -y libxext-dev libxfixes-dev libxi-dev libxrender-dev
        sudo apt-get install -y libssl-dev libdbus-1-dev libasound2-dev
        sudo apt-get install -y libgmp-dev libmpfr-dev libmpc-dev texinfo
        sudo apt-get install -y flex bison gawk m4 binutils-gold

    # 编译安装 GCC 15.1.0
    - name: Build and Install GCC 15.1.0
      run: |
        cd /tmp
        
        # 下载GCC源代码 (使用正确的镜像路径)
        echo "Downloading GCC 15.1.0..."
        # 尝试多个镜像源
        wget -O gcc-15.1.0.tar.xz https://ftp.gnu.org/gnu/gcc/gcc-15.1.0/gcc-15.1.0.tar.xz || \
        wget -O gcc-15.1.0.tar.xz https://mirror.bjtu.edu.cn/gnu/gcc/gcc-15.1.0/gcc-15.1.0.tar.xz || \
        wget -O gcc-15.1.0.tar.xz https://mirrors.ustc.edu.cn/gnu/gcc/gcc-15.1.0/gcc-15.1.0.tar.xz || \
        wget -O gcc-15.1.0.tar.xz https://mirrors.tuna.tsinghua.edu.cn/gnu/gcc/gcc-15.1.0/gcc-15.1.0.tar.xz
        
        tar -xf gcc-15.1.0.tar.xz
        cd gcc-15.1.0
        
        # 下载依赖
        echo "Downloading GCC dependencies..."
        ./contrib/download_prerequisites
        
        # 创建构建目录
        cd ..
        mkdir gcc-build
        cd gcc-build
        
        # 配置编译选项
        echo "Configuring GCC..."
        ../gcc-15.1.0/configure \
            --prefix=/opt/gcc-15.1.0 \
            --enable-languages=c,c++ \
            --disable-multilib \
            --enable-threads=posix \
            --enable-shared \
            --enable-lto \
            --enable-plugin \
            --enable-checking=release \
            --with-system-zlib \
            --without-included-gettext \
            --enable-gnu-unique-object \
            --enable-linker-build-id \
            --with-gcc-major-version-only \
            --enable-libstdcxx-backtrace \
            --enable-default-pie \
            --enable-cet=auto
        
        # 编译（使用较少并行数避免内存不足）
        echo "Building GCC (this may take 60-90 minutes)..."
        make -j2
        
        # 安装
        echo "Installing GCC..."
        sudo make install

        # 彻底清理GCC构建文件
        echo "Cleaning up GCC build files..."
        cd /tmp
        rm -rf gcc-15.1.0
        rm -rf gcc-build
        rm -f gcc-15.1.0.tar.xz
        
        # 清理系统临时文件
        sudo rm -rf /tmp/* 2>/dev/null || true
        sudo rm -rf /var/tmp/* 2>/dev/null || true
        
        # 清理包管理器缓存
        sudo apt-get clean
        sudo apt-get autoclean
        
        # 验证安装
        /opt/gcc-15.1.0/bin/gcc --version
        /opt/gcc-15.1.0/bin/g++ --version

    # 构建Qt
    - name: Build Qt
      run: |
        # 设置GCC环境
        export PATH="/opt/gcc-15.1.0/bin:$PATH"
        export LD_LIBRARY_PATH="/opt/gcc-15.1.0/lib64:$LD_LIBRARY_PATH"
        
        # 创建文件夹
        cd ..  # Directory: /home/runner/work/QtBuild
        mkdir -p Qt

        # 创建文件夹
        cd Qt   # Directory: /home/runner/work/QtBuild/Qt
        mkdir -p ${{env.QT_VERSION}}
        mkdir -p ${{env.QT_VERSION}}-static

        # 下载源代码并解压
        curl -L -o qt-everywhere-src.tar.xz https://download.qt.io/official_releases/qt/${{env.QT_VERSION2}}/${{env.QT_VERSION}}/single/qt-everywhere-src-${{env.QT_VERSION}}.tar.xz
        tar -xf qt-everywhere-src.tar.xz -C ./${{env.QT_VERSION}}

        # 删除源码包节省空间
        rm qt-everywhere-src.tar.xz

        # 调用编译脚本
        bash "/home/runner/work/QtBuild/QtBuild/Qt6Build/Build_Qt6.9.1_x86_64-linux-gnu_gcc15.1_static.sh"

    # 打包
    - name: Package binaries
      run: |
        7z a Qt_${{env.QT_VERSION}}-${{env.FILE_NAME}}.7z ../Qt/${{env.QT_VERSION}}-static -mx=9

    # 上传
    - uses: actions/upload-artifact@v4
      with:
        name: Qt_${{env.QT_VERSION}}-${{env.FILE_NAME}}
        path: Qt_${{env.QT_VERSION}}-${{env.FILE_NAME}}.7z