name: Build_Qt6.9.1_arm-linux-gnueabihf_gcc13.2_static

on: workflow_dispatch
#on: [push, pull_request]

env:
  QT_VERSION: 6.9.1
  QT_VERSION2: 6.9
  FILE_NAME: static-Release_armhf_gcc13_2

jobs:
  ubuntu_armhf_cross_static_release:
    runs-on: ubuntu-24.04

    steps:
    # 检出本仓库
    - name: Checkout repository
      uses: actions/checkout@v4

    # 安装python
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        architecture: 'x64'

    # 更新系统并安装依赖
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build curl unzip p7zip-full
        sudo apt-get install -y crossbuild-essential-armhf
        sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
        sudo apt-get install -y libc6-dev-armhf-cross

    # 安装交叉编译工具链和库
    - name: Setup ARM32 Cross-compilation Environment
      run: |
        # 创建交叉编译工具链目录
        sudo mkdir -p /opt/arm-linux-gnueabihf
        
        # 设置符号链接到系统交叉编译器
        sudo mkdir -p /opt/arm-linux-gnueabihf/bin
        sudo ln -sf /usr/bin/arm-linux-gnueabihf-gcc /opt/arm-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc || true
        sudo ln -sf /usr/bin/arm-linux-gnueabihf-g++ /opt/arm-linux-gnueabihf/bin/arm-linux-gnueabihf-g++ || true
        sudo ln -sf /usr/bin/arm-linux-gnueabihf-ar /opt/arm-linux-gnueabihf/bin/arm-linux-gnueabihf-ar || true
        sudo ln -sf /usr/bin/arm-linux-gnueabihf-strip /opt/arm-linux-gnueabihf/bin/arm-linux-gnueabihf-strip || true
        sudo ln -sf /usr/bin/arm-linux-gnueabihf-objcopy /opt/arm-linux-gnueabihf/bin/arm-linux-gnueabihf-objcopy || true
        sudo ln -sf /usr/bin/arm-linux-gnueabihf-nm /opt/arm-linux-gnueabihf/bin/arm-linux-gnueabihf-nm || true
        sudo ln -sf /usr/bin/arm-linux-gnueabihf-ranlib /opt/arm-linux-gnueabihf/bin/arm-linux-gnueabihf-ranlib || true
        
        # 创建目录结构
        sudo mkdir -p /opt/arm-linux-gnueabihf/arm-linux-gnueabihf/sysroot
        
        # 复制系统根目录
        sudo cp -r /usr/arm-linux-gnueabihf/* /opt/arm-linux-gnueabihf/arm-linux-gnueabihf/sysroot/ || true
        
        # 验证交叉编译器
        arm-linux-gnueabihf-gcc --version
        arm-linux-gnueabihf-g++ --version

    # 构建Qt
    - name: Build Qt
      run: |
        # 创建文件夹
        cd ..  # Directory: /home/runner/work/QtBuild
        mkdir -p Qt

        # 创建文件夹
        cd Qt   # Directory: /home/runner/work/QtBuild/Qt
        mkdir -p ${{env.QT_VERSION}}
        mkdir -p ${{env.QT_VERSION}}-static

        # 下载源代码并解压
        curl -L -o qt-everywhere-src.tar.xz https://download.qt.io/official_releases/qt/${{env.QT_VERSION2}}/${{env.QT_VERSION}}/single/qt-everywhere-src-${{env.QT_VERSION}}.tar.xz
        tar -xf qt-everywhere-src.tar.xz -C ./${{env.QT_VERSION}}

        # 调用编译脚本
        bash "/home/runner/work/QtBuild/QtBuild/Qt6Build/Build_Qt6.9.1_arm-linux-gnueabihf_gcc13.2_static.sh"

    # 打包
    - name: Package binaries
      run: |
        7z a Qt_${{env.QT_VERSION}}-${{env.FILE_NAME}}.7z ../Qt/${{env.QT_VERSION}}-static -mx=9

    # 上传
    - uses: actions/upload-artifact@v4
      with:
        name: Qt_${{env.QT_VERSION}}-${{env.FILE_NAME}}
        path: Qt_${{env.QT_VERSION}}-${{env.FILE_NAME}}.7z